<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="Allim-Mapper">
	
	<select id="selectOpenTotalCount" parameterType="str" resultType="int">
		select COUNT(*) from allim
		where to_id =#{to_id}
		and open_seqno is not null
	</select>
	
	<select id = "selectRecTotalCount" parameterType="str" resultType="int">
		select COUNT(*) from allim
		where to_id =#{to_id}
        and rec_wantedno is not null
	</select>
	<!-- 기업이 개인에게  Open -->
	<select id="selectToOpenId" parameterType="str" resultType="allim">
		select
		nm.open_seqno,alm.OPEN_SEQNO,alm.ALM_SEQNO, nm.co_nm,nm.open_title,
		 alm.FROM_ID,alm.TO_ID,alm.ALM_DATE,alm.ALM_CHECK_DATE,alm.ALM_CHECK_OPEN,alm.alm_type
		from
		    (select a.co_id,a.open_seqno, a.co_nm, a.open_title, b.rec_wantedtitle, b.rec_wantedno
		          from (select cm.co_nm co_nm,
                       cm.co_id co_id,
                       orec.open_title open_title,
                       orec.open_conm open_conm,
                       orec.open_seqno open_seqno
                  from co_member cm
                       inner join open_rec orec on cm.co_nm = orec.open_conm
                ) a
                       left outer join (select cm.co_nm co_nm,
                                          r.REC_WANTEDTITLE REC_WANTEDTITLE,
                                          r.rec_wantedno rec_wantedno
                                     from co_member cm
                                          inner join recruit r on cm.co_nm = r.co_name
                                   ) b on a.co_nm = b.co_nm)nm
	      ,(select a.ALM_SEQNO, a.FROM_ID, a.TO_ID, a.ALM_DATE, a.ALM_CHECK_DATE, a.ALM_CHECK_OPEN, a.alm_type
	        ,a.OPEN_SEQNO
			from member m, ind_member i, co_member c, allim a, open_rec o
			where m.id = i.ind_id (+)
			  and m.id = c.co_id (+)
	          and c.co_nm = o.OPEN_title (+)
			  and c.co_id = a.from_id (+)
			  and a.to_id =#{toId})alm
	          where nm.open_seqno=alm.OPEN_SEQNO
	</select>
	<!-- 기업이 개인에게 recruit -->
	<select id="selectToRecId" parameterType="str" resultType="allim">
		select a.ALM_SEQNO, a.FROM_ID, a.TO_ID, a.ALM_DATE, a.ALM_CHECK_DATE, a.ALM_CHECK_OPEN, a.alm_type
	        ,a.OPEN_SEQNO, a.REC_WANTEDNO, a.REC_WANTEDTITLE, c.co_nm
			from member m, ind_member i, co_member c, allim a, recruit r
			where m.id = i.ind_id (+)
			  and m.id = c.co_id (+)
	          and c.co_nm = r.co_name (+)
			  and c.co_id = a.from_id (+)
			  and a.to_id =#{toId}
              and a.REC_WANTEDNO is not null
	</select>
	<!-- 개인이 기업에게 recruit -->
	<select id="selecttoRecName" parameterType="str" resultType="allim">
		select a.ALM_SEQNO, a.FROM_ID, a.TO_ID, a.ALM_DATE, a.alm_type
    	  ,a.REC_WANTEDNO ,a.REC_WANTEDTITLE
    	   from member m, ind_member i, co_member c, allim a, recruit r
    	   where m.id = i.ind_id (+)
      	   and m.name = c.co_nm(+)
      	   and c.co_nm = r.co_name(+)
      	   and i.ind_id = a.from_id
      	   and a.to_id = #{toId}
	</select>
	
	
	<update id="insertAllim" parameterType="allim">
		insert into allim (ALM_SEQNO, ALM_DATE, from_id, to_id, ALM_TYPE, open_seqno, rec_wantedno, rec_wantedtitle)
		              values (allim_seq.nextval, sysdate, #{fromId}, #{toId},'1', #{openSeqno}, #{recWantedno}, #{recWantedtitle})
	</update>

</mapper>