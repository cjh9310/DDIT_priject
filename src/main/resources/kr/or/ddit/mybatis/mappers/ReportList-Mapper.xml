<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="ReportList-Mapper">

	<sql id="search">
		<if test="searchType == 'mem'.toString()">
			AND IND_ID LIKE '%'||#{keyword}||'%'
		</if>
		<if test="searchType == 'co'.toString()">
			AND CO_NAME LIKE '%'||#{keyword}||'%'
		</if>		
	</sql>

	<select id="selectAllReportList" resultType="reportList">
		/*selectAllReportList*/
		SELECT *
	  	  FROM (      
			 SELECT ROWNUM AS RNUM,SEARCHALLREPORT.*
		   	   FROM (
				   	 SELECT *
				   	   FROM FALSE_REPORT F
				    NATURAL JOIN REPORT_LIST R
				      WHERE FAL_NO IS NOT NULL
				     <include refid="search" />
				      ORDER BY FAL_NO DESC
				    ) SEARCHALLREPORT
		     <![CDATA[
		    WHERE ROWNUM <= #{endRow}
		    ]]>
		  )
		  <![CDATA[
	 	 WHERE RNUM >= #{startRow}		
		 ]]>
	</select>
	
	
	<select id="selectSearchReportListCount" resultType="int">
		/*selectSearchReportListCount*/
		SELECT COUNT(*)
		  FROM 
		       (SELECT *
				  FROM FALSE_REPORT F
			   NATURAL JOIN REPORT_LIST R)
		 WHERE FAL_NO IS NOT NULL
		 <include refid="search" />
		 ORDER BY FAL_NO DESC   
	</select>
	
	
	<select id="selectReportListByFalNo" parameterType="int" resultType="reportList">
		/*SELECTREPORTLISTBYFALNO*/
          SELECT F.FAL_NO
                ,F.IND_ID
                ,F.FAL_TITLE
                ,F.FAL_CONTENT
                ,F.FAL_SDATE
                ,F.FAL_ODATE
                ,F.FAL_EDATE
                ,F.FAL_CATEGORY
                ,F.FAL_CATEGORYDETAIL
                ,R.AD_ID
                ,R.REP_STATUS
                ,C.CO_ID
                ,C.CO_NM
                ,C.CO_ADDR
                ,C.CO_DEADDR
                ,C.CO_CONFIRM
                ,C.CO_COMMENT
                
			FROM FALSE_REPORT F
                ,REPORT_LIST R 
                ,CO_MEMBER C
           WHERE F.FAL_NO=R.FAL_NO
             AND F.CO_ID=C.CO_ID
             AND F.FAL_NO=#{falNo}		  
	</select>
	
	<select id="selectCoDetail" parameterType="str" resultType="coDetailList">
		/*ReportList-Mapper.selectCoDetail*/
		SELECT '공채' AS TYPE
             , A.CO_ID
		     , A.CO_ADDR
		     , A.CO_DEADDR
		     , A.CO_NM AS CO_NAME
		     , A.CO_CONFIRM
		     , B.REC_WANTEDTITLE AS OPEN_TITLE
		  FROM CO_MEMBER A	/*기업회원*/
		     , RECRUIT B		/*공개채용*/
		 WHERE A.CO_NM=B.CO_NAME
	 	   AND A.CO_NM = #{coName}
          
         UNION ALL
        
         SELECT '일반' AS TYPE
              , A.CO_ID
		      , A.CO_ADDR
		      , A.CO_DEADDR
		      , A.CO_NM AS CO_NAME
		      , A.CO_CONFIRM
		      , C.OPEN_TITLE
		  FROM CO_MEMBER A	/*기업회원*/
		     , OPEN_REC C	/*일반채용*/
		 WHERE A.CO_NM=C.OPEN_CONM
	 	   AND A.CO_NM = #{coName}
	</select>
	
	<update id="updateReportChangeStatus" parameterType="reportList">
		/*ReportList-Mapper.updateReportChangeStatus*/
		UPDATE REPORT_LIST
		   SET REP_STATUS = #{repStatus}
		 WHERE FAL_NO = #{falNo}  
	</update>
	
	<update id="updateReturnConfirm" parameterType="member">
		/*ReportList-Mapper.updateReportConfirm*/
		UPDATE CO_MEMBER
		   SET CO_CONFIRM = #{coConfirm}
		 WHERE CO_ID = #{id}
	</update>
	
</mapper>
